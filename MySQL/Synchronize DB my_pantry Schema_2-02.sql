-- MySQL Workbench Synchronization
-- Generated: 2025-08-19 06:20
-- Model: New Model
-- Version: 1.0
-- Project: Name of the project
-- Author: wdavi
/* Add indices to tables for efficient WHERE clause on SELECT
Reorder Foreign Key fields to the beginning of each table to increase readability of Table relationships */

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

ALTER TABLE `my_pantry`.`INVENTORY_ITEM` 
DROP FOREIGN KEY `fk_INVENTORY_ITEM_BRANDS1`,
DROP FOREIGN KEY `fk_INVENTORY_ITEM_CATEGORIES1`,
DROP FOREIGN KEY `fk_INVENTORY_ITEM_UNITS1`;

ALTER TABLE `my_pantry`.`STOCK` 
DROP FOREIGN KEY `fk_STOCK_INVENTORY_ITEM1`;

ALTER TABLE `my_pantry`.`USERS_ROLES` 
DROP FOREIGN KEY `fk_USERS_ROLES_ROLE1`,
DROP FOREIGN KEY `fk_USERS_ROLES_USERS1`;

ALTER TABLE `my_pantry`.`USERS` 
ADD UNIQUE INDEX `USERNAME_UNIQUE` (`USERNAME` ASC) VISIBLE;
;

ALTER TABLE `my_pantry`.`BRANDS` 
ADD UNIQUE INDEX `BRAND_NAME_UNIQUE` (`BRAND_NAME` ASC) VISIBLE;
;

ALTER TABLE `my_pantry`.`CATEGORIES` 
ADD UNIQUE INDEX `CATEGORY_NAME_UNIQUE` (`CATEGORY_NAME` ASC) VISIBLE;
;

ALTER TABLE `my_pantry`.`INVENTORY_ITEM` 
CHANGE COLUMN `BRANDS_ID` `BRANDS_ID` INT(11) NOT NULL AFTER `ID`,
CHANGE COLUMN `CATEGORIES_ID` `CATEGORIES_ID` INT(11) NOT NULL AFTER `BRANDS_ID`,
CHANGE COLUMN `UNITS_ID` `UNITS_ID` INT(11) NOT NULL AFTER `CATEGORIES_ID`,
CHANGE COLUMN `BARCODES` `BARCODES` INT(11) NOT NULL COMMENT '-  Use VARCHAR(13) to accommodate UPC-A (12 digits) and EAN-13 (13 digits).\n- If some items (like produce) donâ€™t have barcodes, allow NULL.\n' ,
ADD INDEX `fk_INVENTORY_ITEM_BRANDS1_idx` (`BRANDS_ID` ASC) VISIBLE,
ADD INDEX `fk_INVENTORY_ITEM_CATEGORIES1_idx` (`CATEGORIES_ID` ASC) VISIBLE,
ADD INDEX `fk_INVENTORY_ITEM_UNITS1_idx` (`UNITS_ID` ASC) VISIBLE,
ADD UNIQUE INDEX `BARCODES_UNIQUE` (`BARCODES` ASC) VISIBLE,
DROP INDEX `fk_INVENTORY_ITEM_UNITS1` ,
DROP INDEX `fk_INVENTORY_ITEM_CATEGORIES1` ,
DROP INDEX `fk_INVENTORY_ITEM_BRANDS1` ,
DROP INDEX `BARCODE_UNIQUE` ;
;

ALTER TABLE `my_pantry`.`STOCK` 
CHANGE COLUMN `INVENTORY_ITEM_ID` `INVENTORY_ITEM_ID` INT(11) NOT NULL AFTER `ID`,
ADD INDEX `fk_STOCK_INVENTORY_ITEM1_idx` (`INVENTORY_ITEM_ID` ASC) VISIBLE,
DROP INDEX `fk_STOCK_INVENTORY_ITEM1` ;
;

ALTER TABLE `my_pantry`.`UNITS` 
ADD UNIQUE INDEX `UNIT_NAME_UNIQUE` (`UNIT_NAME` ASC) VISIBLE;
;

ALTER TABLE `my_pantry`.`ROLE` 
ADD UNIQUE INDEX `NAME_UNIQUE` (`NAME` ASC) VISIBLE;
;

ALTER TABLE `my_pantry`.`USERS_ROLES` 
ADD INDEX `fk_USERS_ROLES_ROLE1_idx` (`ROLE_ID` ASC) VISIBLE,
ADD INDEX `fk_USERS_ROLES_USERS1_idx` (`USERS_ID` ASC) VISIBLE,
DROP INDEX `fk_USERS_ROLES_USERS1` ,
DROP INDEX `fk_USERS_ROLES_ROLE1` ;
;

ALTER TABLE `my_pantry`.`INVENTORY_ITEM` 
ADD CONSTRAINT `fk_INVENTORY_ITEM_BRANDS1`
  FOREIGN KEY (`BRANDS_ID`)
  REFERENCES `my_pantry`.`BRANDS` (`ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT `fk_INVENTORY_ITEM_CATEGORIES1`
  FOREIGN KEY (`CATEGORIES_ID`)
  REFERENCES `my_pantry`.`CATEGORIES` (`ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT `fk_INVENTORY_ITEM_UNITS1`
  FOREIGN KEY (`UNITS_ID`)
  REFERENCES `my_pantry`.`UNITS` (`ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

ALTER TABLE `my_pantry`.`STOCK` 
ADD CONSTRAINT `fk_STOCK_INVENTORY_ITEM1`
  FOREIGN KEY (`INVENTORY_ITEM_ID`)
  REFERENCES `my_pantry`.`INVENTORY_ITEM` (`ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

ALTER TABLE `my_pantry`.`USERS_ROLES` 
ADD CONSTRAINT `fk_USERS_ROLES_ROLE1`
  FOREIGN KEY (`ROLE_ID`)
  REFERENCES `my_pantry`.`ROLE` (`ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
ADD CONSTRAINT `fk_USERS_ROLES_USERS1`
  FOREIGN KEY (`USERS_ID`)
  REFERENCES `my_pantry`.`USERS` (`ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
